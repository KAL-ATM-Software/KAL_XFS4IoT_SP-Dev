/***********************************************************************************************\
 * (C) KAL ATM Software GmbH, 2021
 * KAL ATM Software GmbH licenses this file to you under the MIT license.
 * See the LICENSE file in the project root for more information.
 *
 * This file was created automatically as part of the XFS4IoT CashAcceptor interface.
 * CashInStart_g.cs uses automatically generated parts.
\***********************************************************************************************/

using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using XFS4IoT.Completions;

namespace XFS4IoT.CashAcceptor.Completions
{
    [DataContract]
    [Completion(Name = "CashAcceptor.CashInStart")]
    public sealed class CashInStartCompletion : Completion<CashInStartCompletion.PayloadData>
    {
        public CashInStartCompletion(int RequestId, CashInStartCompletion.PayloadData Payload)
            : base(RequestId, Payload)
        { }

        [DataContract]
        public sealed class PayloadData : MessagePayload
        {

            public PayloadData(CompletionCodeEnum CompletionCode, string ErrorDescription, ErrorCodeEnum? ErrorCode = null)
                : base(CompletionCode, ErrorDescription)
            {
                this.ErrorCode = ErrorCode;
            }

            public enum ErrorCodeEnum
            {
                InvalidTellerId,
                UnsupportedPosition,
                ExchangeActive,
                CashInActive,
                SafeDoorOpen
            }

            /// <summary>
            /// Specifies the error code if applicable. Following values are possible:
            /// 
            /// \"invalidTellerId\": The teller ID is invalid. This error will never be generated by a Self-Service device.
            /// 
            /// \"unsupportedPosition\": The position specified is not supported.
            /// 
            /// \"exchangeActive\": The device is in the exchange state.
            /// 
            /// \"cashInActive\": The device is already in the cash-in state due to a previous CashAcceptor.CashInStart command.
            /// 
            /// \"safeDoorOpen\": The safe door is open. This device requires the safe door to be closed in order to perform a CashAcceptor.CashInStart command.
            /// </summary>
            [DataMember(Name = "errorCode")]
            public ErrorCodeEnum? ErrorCode { get; private set; }

        }
    }
}
